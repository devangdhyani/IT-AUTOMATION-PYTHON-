Popen:-
Popen() offers more advanced features compared to the previously mentioned functions. It allows you to spawn a new process, connect to its input/output/error pipes, and obtain its return code.

Using Popen to execute the echo command:

process_popen = subprocess.Popen(['echo', 'Hello from popen!'], stdout=subprocess.PIPE, text=True)

output_popen, _ = process_popen.communicate()

output_popen.strip()  # Extracting the stdout and stripping any extra whitespace

output:

'Hello from popen!'
import subprocess

Using Popen for asynchronous behavior: 

process = subprocess.Popen(['sleep', '5'])

message_1 = "The process is running in the background..."

# Give it a couple of seconds to demonstrate the asynchronous behavior

import time

time.sleep(2)

# Check if the process has finished

if process.poll() is None:

	message_2 = "The process is still running."

else:

	message_2 = "The process has finished."

print(message_1, message_2)

output:

('The process is running in the background...',

 'The process is still running.')
